# This file contains shell instructions/ aliases/ functions/ etc. that should work for most shells

_os=$(uname)

# VARIABLES
export AWS_SDK_LOAD_CONFIG=1

export EDITOR='vim'

export GOPATH=${HOME}/Documents/dev/GOPATH
export GOBIN=${GOPATH}/bin

if [[ -z "${HOSTNAME}" ]]; then
  export HOSTNAME=$(hostname -s)
fi

export MANPATH="/usr/local/man:${MANPATH}"

export PATH="\
${HOME}/bin/:\
${HOME}/.rvm/bin:\
/usr/local/bin:\
/usr/local/sbin:\
${GOPATH}/bin:\
${PATH}:\
/usr/local/bin/python:\
/opt/local/bin:\
${HOME}/packer:\
${HOME}/terraform:\
${HOME}/.local_tools/:\
"

export KUBECONFIG="$(find ${HOME}/.kube -type f -name 'config*' -not -name '*.old' | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/:/g'):${KUBECONFIG}"

pyenv_version=$(pyenv version-name 2>/dev/null)
[[ $? == 0 && -n ${pyenv_version?} ]] && export PATH="${HOME?}/.pyenv/versions/${pyenv_version?}/bin:${PATH?}"

export LANG=$LC_ALL
export LC_ALL=en_US.UTF-8
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'


if [[ $_os == Darwin || $_os =~ .*BSD ]]; then
  LS_OPTIONS='-G -lhFs'
else
  LS_OPTIONS='--color=always -lhFs --time-style=long-iso'
fi


# ALIASES
alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'

alias atc_uptodate='apt-get update && apt-get upgrade'

alias diff="colordiff -u"
alias dck="docker"
alias dcp="docker-compose"
alias dcm="docker-machine"

alias gbr='git branch -r'
alias gc='git commit -v -s -S'
alias gdc='git diff --cached'
alias get='git fetch --prune --append --tags --all && git pull origin $(current_branch)'
alias gfa='git fetch origin --all --prune'
alias ggg='git pull origin $(current_branch)'
alias ggp='git push origin $(current_branch)'
alias glogp='git log --graph --abbrev-commit --decorate --all --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)"'
alias gmc='git merge --no-ff'
alias grep="grep -E --color=auto -I --exclude-dir={.bzr,.cvs,.git,.hg,.svn}"
alias gst='git status -s'
alias gt='git tag -s'

if [[ $ITERM_PROFILE == "Beamer" ]]; then
  alias htop="HTOPRC=/dev/null htop --no-color"
fi

alias j='jobs -l'

alias k='kubectl'
alias kcl='kubectl'

function kns() {
  kubectl config set-context $(kubectl config current-context) --namespace=${1}
}
function kget() {
  kubectl get all -l "$@" --all-namespaces
}
function kgetsvc() {
  kubectl get service -l "$@" --all-namespaces
}
function kgetp() {
  kubectl get pod -l "$@" --all-namespaces
}
function kgetd() {
  kubectl get deployment -l "$@" --all-namespaces
}
function kgeti() {
  kubectl get ingress -l "$@" --all-namespaces
}
function kgetsec() {
  kubectl get secret -l "$@" --all-namespaces
}
function kgetsa() {
  kubectl get serviceaccount -l "$@" --all-namespaces
}

# Get pods with namespace
function kl() {
  kubectl get pods -l $@ --all-namespaces -o json | jq -r '.items[].metadata | "\(.name) -n \(.namespace)"'
}
# Jump into a pod
function kex() {
  kubectl exec -it "$@" -- bash
}

alias less="less -S"
alias l="ls -A ${LS_OPTIONS}"
alias ll="ls ${LS_OPTIONS}"
alias lhistory='fc -lfDE -1000'

alias m='minikube'
alias mtr_dns='mtr --report --report-wide'
alias mtr_nodns='mtr --report --report-wide --no-dns'

alias exif_rename_photos="exiftool -d '%Y-%m-%d %H-%M %%03.c.%%e' '-filename<CreateDate' ."

alias salt='time salt -v'
alias sudo='sudo ' # Make alias lookup
alias sudoedit='sudo vim ' # Make alias lookup
alias s='sudo ' # Make alias lookup

alias ta='tail -f'
alias tf='terraform'
alias tree='tree -aFC --charset=ascii'

alias vim-vanilla="vim -u NONE"

alias xkcdpass="xkcdpass -n 4 -d '-'"

if [[ $_os == Darwin || $_os =~ .*BSD ]]; then
  alias cp='cp'
  alias mv='mv'
  alias rm='rm'
  alias ports='netstat -n'
else
  alias chgrp='chgrp --preserve-root'
  alias chmod='chmod --preserve-root'
  alias chown='chown --preserve-root'
  alias cp='cp -i'
  alias fwrules='iptables -nvL --line-numbers'
  alias fw6rules='ip6tables -nvL --line-numbers'
  alias ls="ls --color=tty"
  alias mv='mv -i'
  alias ports='netstat -tulpena'
  alias rm='rm -i'
fi


# MISC
halt() {
  l8security "/sbin/shutdown -hf +1"
}

reboot() {
  l8security "/sbin/shutdown -rf +1"
}

checksum() {
  sha256sum $@
}

#[[ -e /usr/local/bin/virtualenvwrapper.sh ]] && source /usr/local/bin/virtualenvwrapper.sh

# The End.
true
